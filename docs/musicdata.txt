pydPiper Project
by Dhrone

Documentation of the variables generated by the musicdata sources

Variable Descriptions

FROM MUSIC SOURCE

Player State
------------
state (unicode)
  Description - Current playing state of the active music source
  Values - ONLY 'stop', 'play'

actPlayer (unicode)
  Description - The current active music source.
  Values - MPD, Spotify, Webradio

musicdatasource (unicode)
  Description - The musicdata source that is providing the current data
  Values - Volumio, Rune, LMS, MPD, SPOP

Note on actPlayer vs. musicdatasource.  musicdatasource tracks what musicdata driver is providing the information.  Some drivers get their information from multiple music sources.  This is where actPlayer comes in.  It will have the actual source of the music data regardless of whether it is coming through an aggregation layer such as Volumio, LMS, or Rune.

volume (int)
  Description - The current player volume setting as a percent of maximum volume
  Values - 0-100

volume_bar_big (unicode)
  Description - A string filled with custom character symbols to make up a "graphical" volume bar.  Autosizes to 3 characters less than current display width.  Requires fonts.size5x8.speaker to be loaded on the page.  This font package allows a large 2x2 speaker to be displayed.

volume_bar_fancy (unicode)
  Description - A string filled with custom character symbols to make up a "graphical" volume bar.  Autosizes to 2 characters less than current display width.  Requires fonts.size5x8.volume to be loaded on the page.  This font package uses more symbols for the volume bar but doesn't leave room in the custom font table for the 2x2 speaker.



Track information
-----------------
album (unicode)
  Description - Album name
  Values - all strings

artist (unicode)
  Description - Artist name
  Values - all strings

title (unicode)
  Description - Title name
  Values - all string

uri (unicode)
  Description - Uniform resource indicator pointing to the source data for the song
  Values - Properly formated URI (e.g. http://location/file.mp3 )

encoding (unicode)
  Description - Type of encoding if none.  Otherwise the source of the song. 'volume_bar_fancy',
  Values - mp3, flac, spotify, webradio

tracktype(unicode)
  Description - Formatted information concerning song encoding information
  Values - 'MP3 Stereo 24 bit 44.1 Khz'

bitdepth (unicode)
    Description - Resolution of the sampling used for the playing song
    Values - 16 bits, 24 bits

bitrate (unicode)
  Description - The bit rate for the file.  May show 'VBR' if the rate is variable
  Values - 320 kbs, VBR

samplerate (unicode)
  Description - The sample rate for the file.
  Values 44.1 kHz, 96 kHz

channels (int)
  Description - The number of channels contained within song
  Values - 0, 1, 2, 3, 5, 7 (0 for unknown, 1 for mono, 2 for stereo, etc.)

length (int)
  Description - The length of the song in seconds
  Values - Positive integer that varies based upon the song
  Previously called - duration

elapsed (int)
  Description - The amount of time in seconds the song has been playing
  Values - 0 to length of song
  Previously called - current

elapsed_formatted (unicode)
  Description - Formatted information showing the amount of time the song has been playing
  Values 0:20
  Previously called - position

remaining (unicode)
  Description - Formatted information showing the amount of time left in the current song
  Values - 3:22




Playlist Information
--------------------
playlist_position (int)
  Description - The number within the playlist of the current song
  Values - integer >= 0.  Will be 0 if there is no playlist active (e.g. streaming)

playlist_length (int)
  Description - The number of songs contained within the current playlist
  Values - integer >= 0.  Will be 0 if there is no playlist active (e.g. streaming)
  Previously called - playlist_count

playlist_display (unicode)
  Description - Formatted information on playlist status.  Displays 'Radio' if playing from streaming source.
  Values - 1/9, 8/20, Radio

random (boolean)
  Description - Is the song order being randomized?
  Values - True/False

single (boolean)
  Description - Is the current song repeating indefinitely?
  Values - True/False

repeat (boolean)
  Description - Is the playlist going to be repeated when the last song is finished?
  Values - True/False


FROM PYDPIPER CONTROLLER

System Information
------------------
utc (moment object)
  Description - The current time in coordinated universal time
	Values -- A moment object containing the current time

localtime (moment object)
	  Description - The current time in local timezone (affected by TIMEZONE setting)
		Values -- A moment object containing the current time

time (unicode)
  Description - Simple formatted display of time (affected by TIMEZONE setting)
  Values - "3:22p", "23:59"
  Previously called - current_time

system_temp (float)
  Description - Current temp of system.  Uses key 'TEMPERATURE' to determine whether the value should be fahrenheit or celsius.
  Values - 102.3

system_tempf (float)
  Description - Current temp of system in fahrenheit
  Values - 102.3

system_tempc (float)
  Description - Current temp of system in celsius
  Values - 78.3

system_temp_formatted (unicode)
  Description - Formatted version of system temperature.  Uses key 'TEMPERATURE' to determine whether the value should be fahrenheit or celsius.
  Values 102.3°f, 73.1°c

disk_avail (int)
  Description - Amount of disk space available in bytes
  Values - 56948276

disk_used (int)
    Description - Amount of disk space used in bytes
    Values - 1700012

disk_usedp (int)
  Description - Percentage of disk space used
  Values - 3 (Value from 0 to 100)

disk_availp (int)
  Description - Percentage of disk space available (still left)
  Values - 97 (Value from 0 to 100)

ip (unicode)
  Description - The IP address of the host
  Values - 192.168.2.40
  Previously current_ip

Weather Information
--------------------
Requires Open Weather Map API (from http://openweathermap.org) and current location to be set in pydPiper_config.py.  Variables to set are OWM_API and OWM_LOCATION.

outside_temp (float)
  Description - Current Outside temperature.  Uses key 'TEMPERATURE' to determine whether the value should be fahrenheit or celsius.
  Values 78.34

outside_temp_max (float)
  Description - Forecast high outside temperature for the day.  Uses key 'TEMPERATURE' to determine whether the value should be fahrenheit or celsius.
  Values 92.32

outside_temp_min (float)
  Description - Forecast low outside temperature for the day.  Uses key 'TEMPERATURE' to determine whether the value should be fahrenheit or celsius.
  Values 92.34

outside_temp_formatted (unicode)
  Description - Formatted version of outside temperature.  Uses key 'TEMPERATURE' to determine whether the value should be fahrenheit or celsius.
  Values 78°f, 23°c

outside_temp_max_formatted (unicode)
  Description - Formatted version of the high outside temperature forecast for the day.  Uses key 'TEMPERATURE' to determine whether the value should be fahrenheit or celsius.
  Values 78°f, 23°c

outside_temp_min_formatted (unicode)
  Description - Formatted version of the low outside temperature forecast for the day.  Uses key 'TEMPERATURE' to determine whether the value should be fahrenheit or celsius.
  Values 48°f, 14°c

outside_conditions (unicode)
  Description - Current weather conditions.
  Values 'partly cloudy'


Transformations
---------------

It is possible to transform values to make them more displayable by adding the requested transform at the end of variable name.  As an example, if you want to transform a boolean value like random into 'on' or 'off' you could request variable random|onoff.

Notes
* The '|' character must come before the transform
* Inputs vary depending on the type of transform.
* Outputs are always strings.
* The capitalization transforms can be added after the others (e.g. random|onoff|upper).

Boolean transforms
------------------
Input must be boolean
|onoff - converts to "on" or "off"
|truefalse - converts to "true" or "false"
|yesno - converts to "yes" or "no"

Capitalization transforms
-------------------------
Input must be string
|upper - converts input to upper case
|capitalize - converts first character of input to upper case
|title - converts first character of every word to upper case
|lower - converts input to lower case

Time transforms
--------------------------
Input must be a moment object
|timezone+tz - converts utc referenced moment object into an equivalant moment object in the timezone requested by the tz parameter
|strftime+s - converts moment object into string formated using the strftime format string provided in the s parameter
